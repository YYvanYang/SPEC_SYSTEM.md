name: feature-lifecycle
description: Complete feature development workflow with quality gates

phases:
  strategic-planning:
    description: High-level planning and architecture
    agents:
      - name: steering-architect
        task: analyze-project
        inputs: [requirements.md]
        outputs: [technical-strategy.md, risk-assessment.md]
        
      - name: feature-planner  
        task: break-down-features
        inputs: [technical-strategy.md]
        outputs: [feature-breakdown.md, timeline.md]
        depends_on: [steering-architect]
        
      - name: design-architect
        task: create-system-design
        inputs: [feature-breakdown.md]
        outputs: [architecture.md, component-design.md]
        depends_on: [feature-planner]
        
    quality-gates:
      - technical-strategy-approved
      - feature-scope-defined
      - architecture-reviewed

  detailed-specification:
    description: Detailed requirements and design
    agents:
      - name: requirements-engineer
        task: normalize-requirements
        inputs: [feature-breakdown.md]
        outputs: [requirements.md]
        
      - name: design-architect
        task: detail-components
        inputs: [requirements.md, architecture.md]
        outputs: [design.md, api-specs.md]
        depends_on: [requirements-engineer]
        
      - name: test-strategist
        task: plan-testing-strategy
        inputs: [requirements.md, design.md]
        outputs: [test-plan.md]
        depends_on: [design-architect]
        
    quality-gates:
      - requirements-ears-compliant
      - design-completeness-check
      - test-strategy-approved

  implementation:
    description: Code implementation and testing
    agents:
      - name: implementation-specialist
        task: implement-feature
        inputs: [requirements.md, design.md, tasks.md]
        outputs: [code-changes, implementation-notes.md]
        
      - name: test-strategist
        task: run-tests
        inputs: [code-changes, test-plan.md]
        outputs: [test-results, coverage-report]
        depends_on: [implementation-specialist]
        
      - name: quality-guardian
        task: review-implementation
        inputs: [code-changes, test-results]
        outputs: [review-report.md]
        depends_on: [test-strategist]
        
    quality-gates:
      - all-tests-passing
      - code-coverage-threshold
      - security-scan-clean
      - performance-benchmarks-met

  integration-delivery:
    description: Integration, documentation, and delivery
    agents:
      - name: documentation-curator
        task: update-docs
        inputs: [code-changes, design.md]
        outputs: [updated-docs, changelog.md]
        
      - name: metrics-analyst
        task: track-delivery-metrics
        inputs: [implementation-timeline, quality-metrics]
        outputs: [delivery-report.md, metrics-update]
        
      - name: steering-architect
        task: validate-delivery
        inputs: [review-report.md, delivery-report.md]
        outputs: [delivery-approval.md]
        depends_on: [documentation-curator, metrics-analyst]
        
    quality-gates:
      - documentation-complete
      - metrics-collected
      - delivery-criteria-met
      - stakeholder-approval

automation:
  parallel-execution: true
  context-sharing: enabled
  failure-recovery: retry-with-feedback
  quality-gate-enforcement: strict

notifications:
  phase-completion: team-channel
  quality-gate-failure: assignee-direct
  delivery-ready: stakeholders