name: feature-context
description: Feature-scoped context for planning and design agents
scope: single-feature

agents:
  - feature-planner
  - design-architect
  - requirements-engineer
  - test-strategist

context-includes:
  user-stories:
    - feature-request.md
    - user-personas.md
    - user-journeys.md
    - acceptance-criteria.md
    
  acceptance-criteria:
    - functional-requirements.md
    - non-functional-requirements.md
    - edge-cases.md
    - error-conditions.md
    
  dependencies:
    - internal-dependencies.md
    - external-dependencies.md
    - service-dependencies.md
    - data-dependencies.md
    
  existing-architecture:
    - related-components.md
    - integration-points.md
    - data-models.md
    - api-contracts.md
    
  similar-features:
    - comparable-implementations/
    - lessons-learned/
    - best-practices/
    - known-pitfalls/

context-boundaries:
  include-patterns:
    - specs/features/<current-feature>/
    - specs/architecture/components-related-to-<feature>
    - analytics/feature-metrics/<related-features>
    
  exclude-patterns:
    - specs/features/deprecated/
    - archived-implementations/
    - experimental-prototypes/

knowledge-inheritance:
  from-project-context:
    - architecture-principles
    - technology-constraints
    - quality-standards
    
  from-similar-features:
    - implementation-patterns
    - testing-approaches
    - common-pitfalls

collaboration-patterns:
  requirements-to-design:
    handoff: ears-requirements-complete
    shared-context: [user-needs, business-constraints]
    
  design-to-planning:
    handoff: technical-design-approved
    shared-context: [component-breakdown, integration-complexity]
    
  planning-to-testing:
    handoff: tasks-defined
    shared-context: [risk-areas, complexity-estimates]

update-frequency:
  during-planning: real-time
  during-implementation: daily
  post-completion: final-snapshot