name: Spec CI

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]
    branches: [ main, master ]
  push:
    branches: [ main, master ]
    paths:
      - 'specs/**'
      - '.claude/**'
      - 'scripts/**'
      - '.github/workflows/spec-ci.yml'
      - 'package.json'
      - 'SPEC_POLICY.md'
      - 'CONTRIBUTING.md'
      - 'worker/**'
      - 'wrangler.jsonc'

jobs:
  spec_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'npm' }
      - run: npm ci
      - run: npm run spec:lint

  trace_check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'npm' }
      - run: npm ci
      - name: Propagate PR labels
        run: echo "PR_LABELS=${{ join(github.event.pull_request.labels.*.name, ',') }}" >> $GITHUB_ENV
      - run: npm run trace:check

  permission_check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'npm' }
      - run: npm ci
      - name: Propagate PR labels
        run: echo "PR_LABELS=${{ join(github.event.pull_request.labels.*.name, ',') }}" >> $GITHUB_ENV
      - run: npm run perm:check

  hugo_build:
    runs-on: ubuntu-latest
    needs: [spec_lint, trace_check, permission_check]
    env:
      HUGO_CACHEDIR: /tmp/hugo_cache
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - uses: actions/cache@v4
        with:
          path: ${{ env.HUGO_CACHEDIR }}
          key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-hugomod-
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
          extended: true
      - name: Build Hugo
        run: hugo --gc --minify -e production